{"version":3,"file":"static/js/803.edcbd5e2.chunk.js","mappings":"mKAGA,MAAMA,EAAeC,IAAuE,IAAtE,SAAEC,EAAQ,eAAEC,EAAc,gBAAEC,EAAe,kBAAEC,GAAmBJ,EACpF,MAAOK,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,OAC9CC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GACvCG,GAAiBC,EAAAA,EAAAA,QAAO,OAE9BC,EAAAA,EAAAA,WAAU,KACRN,EAAkB,MAClBG,GAAc,IACb,CAACR,KAEJW,EAAAA,EAAAA,WAAU,KACJT,GAAmBO,EAAeG,SACpCH,EAAeG,QAAQC,eAAe,CACpCC,SAAU,SACVC,MAAO,WAGV,CAACb,IAEJ,MAiBMc,EAAsBC,IAC1B,GAAIV,EAAY,CACd,GAAIU,EAAOC,UAAW,MAAO,wBAC7B,GAAId,IAAmBa,IAAWA,EAAOC,UAAW,MAAO,yBAC7D,CAEA,MAAO,iBAGT,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,gBAAeC,SAAA,CAAC,UAAGrB,EAASA,aAC1CsB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAC/BrB,EAASuB,QAAQC,IAAI,CAACP,EAAQQ,KAC7BH,EAAAA,EAAAA,KAAA,UAEEF,UAAWJ,EAAmBC,GAC9BS,QAASA,IAlCQT,KAErBV,IAEJF,EAAkBY,GAClBT,GAAc,GACVP,GACFA,EAAeD,EAAS2B,GAAIV,EAAOC,aA2BdU,CAAkBX,GAAQI,SAExCJ,EAAOY,MAJHJ,MASVlB,IACCY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAsBU,IAAKrB,EAAeY,SAAA,EACvDC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,qBAAqBM,QAhCdK,IAC/BA,EAAEC,kBACF7B,KA8B8EkB,SACrEnB,EAAkB,+FAAsB,qFAE1CA,IACCiB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,mBAAkBC,SAAA,CAAC,gBAAIrB,EAASiC,sBAQzD,GAAeC,EAAAA,EAAAA,MAAKpC,E","sources":["components/QuestionView.js"],"sourcesContent":["import React, { useState, useEffect, memo, useRef } from 'react';\nimport './QuestionView.css';\n\nconst QuestionView = ({ question, onAnswerResult, showExplanation, toggleExplanation }) => {\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const explanationRef = useRef(null);\n\n  useEffect(() => {\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n  }, [question]);\n\n  useEffect(() => {\n    if (showExplanation && explanationRef.current) {\n      explanationRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [showExplanation]);\n\n  const handleAnswerClick = (answer) => {\n    // This guard prevents the user from changing their answer or re-submitting.\n    if (isAnswered) return;\n\n    setSelectedAnswer(answer);\n    setIsAnswered(true);\n    if (onAnswerResult) {\n      onAnswerResult(question.id, answer.isCorrect);\n    }\n  };\n\n  const handleToggleExplanation = (e) => {\n    e.stopPropagation();\n    toggleExplanation();\n  };\n\n  // --- MODIFIED FUNCTION ---\n  const getButtonClassName = (answer) => {\n    if (isAnswered) {\n      if (answer.isCorrect) return \"answer-button correct\";\n      if (selectedAnswer === answer && !answer.isCorrect) return \"answer-button incorrect\";\n    }\n    // All other buttons (before answering or non-relevant ones after) get the default class.\n    return \"answer-button\";\n  };\n  \n  return (\n    <div className=\"question-card\">\n      <h2 className=\"question-text\">❓ {question.question}</h2>\n      <div className=\"answers-container\">\n        {question.answers.map((answer, index) => (\n          <button\n            key={index}\n            className={getButtonClassName(answer)}\n            onClick={() => handleAnswerClick(answer)}\n          >\n            {answer.text}\n          </button>\n        ))}\n      </div>\n\n      {isAnswered && (\n        <div className=\"explanation-section\" ref={explanationRef}>\n          <button className=\"explanation-toggle\" onClick={handleToggleExplanation}>\n            {showExplanation ? '🙈 ახსნის დამალვა' : '📖 ახსნის ნახვა'}\n          </button>\n          {showExplanation && (\n            <p className=\"explanation-text\">ℹ️ {question.explanation}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(QuestionView);"],"names":["QuestionView","_ref","question","onAnswerResult","showExplanation","toggleExplanation","selectedAnswer","setSelectedAnswer","useState","isAnswered","setIsAnswered","explanationRef","useRef","useEffect","current","scrollIntoView","behavior","block","getButtonClassName","answer","isCorrect","_jsxs","className","children","_jsx","answers","map","index","onClick","id","handleAnswerClick","text","ref","e","stopPropagation","explanation","memo"],"sourceRoot":""}