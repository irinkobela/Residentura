{"version":3,"file":"static/js/652.fcfb8381.chunk.js","mappings":"uLAGA,MAAMA,EAAeC,IAMd,IAADC,EAAA,IANgB,SACpBC,EAAQ,eACRC,EAAc,gBACdC,EAAe,kBACfC,EAAiB,wBACjBC,GACDN,EACC,MAAOO,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,OAC9CC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GACvCG,GAAiBC,EAAAA,EAAAA,QAAO,OAE9BC,EAAAA,EAAAA,WAAU,KACRN,EAAkB,MAClBG,GAAc,IACb,CAACT,KAEJY,EAAAA,EAAAA,WAAU,KACJV,GAAmBQ,EAAeG,SACpCH,EAAeG,QAAQC,eAAe,CACpCC,SAAU,SACVC,MAAO,WAGV,CAACd,IAEJ,MAcMe,EAAsBC,IAC1B,GAAIV,EAAY,CACd,GAAIU,EAAOC,UAAW,MAAO,wBAC7B,GAAId,IAAmBa,IAAWA,EAAOC,UAAW,MAAO,yBAC7D,CACA,MAAO,iBAIHC,EAA2D,QAA1CrB,EAAGC,EAASqB,QAAQC,KAAKC,GAAKA,EAAEJ,kBAAU,IAAApB,OAAA,EAAvCA,EAAyCyB,KAEnE,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,gBAAeC,SAAA,CAAC,UAAG3B,EAASA,aAC1C4B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAC/B3B,EAASqB,QAAQQ,IAAI,CAACX,EAAQY,KAC7BF,EAAAA,EAAAA,KAAA,UAEEF,UAAWT,EAAmBC,GAC9Ba,QAASA,IAjCQb,KACrBV,IACJF,EAAkBY,GAClBT,GAAc,GACVR,GACFA,EAAeD,EAASgC,GAAId,EAAOC,aA4Bdc,CAAkBf,GACjCgB,SAAU1B,EAAWmB,SAEpBT,EAAOM,MALHM,MAUVtB,IACCoB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sBAAqBC,SAAA,CAAC,sFAChBC,EAAAA,EAAAA,KAAA,UAAAD,SAASP,SAK/BZ,IACCiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAsBS,IAAKzB,EAAeiB,SAAA,EACvDC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,qBAAqBK,QA1CdK,IAC/BA,EAAEC,kBACFlC,KAwC8EwB,SACrEzB,EAAkB,+FAAsB,qFAE1CA,IACCuB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,mBAAkBC,SAAA,CAAC,gBAAI3B,EAASsC,sBAQzD,GAAeC,EAAAA,EAAAA,MAAK1C,E","sources":["components/QuestionView.js"],"sourcesContent":["import React, { useState, useEffect, memo, useRef } from 'react';\nimport './QuestionView.css';\n\nconst QuestionView = ({\n  question,\n  onAnswerResult,\n  showExplanation,\n  toggleExplanation,\n  alwaysShowCorrectAnswer \n}) => {\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const explanationRef = useRef(null);\n\n  useEffect(() => {\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n  }, [question]);\n\n  useEffect(() => {\n    if (showExplanation && explanationRef.current) {\n      explanationRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [showExplanation]);\n\n  const handleAnswerClick = (answer) => {\n    if (isAnswered) return;\n    setSelectedAnswer(answer);\n    setIsAnswered(true);\n    if (onAnswerResult) {\n      onAnswerResult(question.id, answer.isCorrect);\n    }\n  };\n\n  const handleToggleExplanation = (e) => {\n    e.stopPropagation();\n    toggleExplanation();\n  };\n\n  const getButtonClassName = (answer) => {\n    if (isAnswered) {\n      if (answer.isCorrect) return \"answer-button correct\";\n      if (selectedAnswer === answer && !answer.isCorrect) return \"answer-button incorrect\";\n    }\n    return \"answer-button\";\n  };\n\n  // Find the correct answer text for display\n  const correctAnswerText = question.answers.find(a => a.isCorrect)?.text;\n\n  return (\n    <div className=\"question-card\">\n      <h2 className=\"question-text\">❓ {question.question}</h2>\n      <div className=\"answers-container\">\n        {question.answers.map((answer, index) => (\n          <button\n            key={index}\n            className={getButtonClassName(answer)}\n            onClick={() => handleAnswerClick(answer)}\n            disabled={isAnswered}\n          >\n            {answer.text}\n          </button>\n        ))}\n      </div>\n\n      {isAnswered && (\n        <div className=\"correct-answer-section\">\n          <p className=\"correct-answer-text\">\n            ✅ სწორი პასუხია: <strong>{correctAnswerText}</strong>\n          </p>\n        </div>\n      )}\n\n      {isAnswered && (\n        <div className=\"explanation-section\" ref={explanationRef}>\n          <button className=\"explanation-toggle\" onClick={handleToggleExplanation}>\n            {showExplanation ? '🙈 ახსნის დამალვა' : '📖 ახსნის ნახვა'}\n          </button>\n          {showExplanation && (\n            <p className=\"explanation-text\">ℹ️ {question.explanation}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(QuestionView);"],"names":["QuestionView","_ref","_question$answers$fin","question","onAnswerResult","showExplanation","toggleExplanation","alwaysShowCorrectAnswer","selectedAnswer","setSelectedAnswer","useState","isAnswered","setIsAnswered","explanationRef","useRef","useEffect","current","scrollIntoView","behavior","block","getButtonClassName","answer","isCorrect","correctAnswerText","answers","find","a","text","_jsxs","className","children","_jsx","map","index","onClick","id","handleAnswerClick","disabled","ref","e","stopPropagation","explanation","memo"],"sourceRoot":""}